// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(uuid())
  firstName String 
  lastName String
  username String @unique
  dateOfBirth DateTime
  email String @unique
  password String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  profile UserProfile?
  posts Post[]
  comments Comment[]
}

model UserProfile {
  id String @id @default(uuid())
  userId String @unique
  user User @relation(fields: [userId], references: [id])
  bio String?
  link String?
  avatar String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model Post {
  id String @id @default(uuid())
  title String
  content String?
  userId String
  user User @relation(fields: [userId], references: [id], onUpdate:  NoAction, onDelete: NoAction)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  comments Comment[]
}

model Comment{
  id String @id @default(uuid())
  content String
  userId String
  user User @relation(fields: [userId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  postId String
  post Post @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}